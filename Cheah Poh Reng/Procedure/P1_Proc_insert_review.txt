CREATE SEQUENCE reviewID_seq
start with 300130
increment by 1
minvalue 300130
maxvalue 999999
nocache;

DROP TABLE comments;
CREATE TABLE comments(
      comment_id      NUMBER GENERATED BY DEFAULT AS IDENTITY,
      comment_length  VARCHAR2(400),
      PRIMARY KEY(comment_id)
);

CREATE OR REPLACE PROCEDURE insert_review(IN_orderId IN NUMBER,
					  IN_comments IN VARCHAR, 
					  IN_rating IN NUMBER) IS
   
    v_temp_count number(6); 
    v_review_date DATE;   
    e_invalidrating exception;
    
BEGIN
    v_temp_count := CONCAT('',reviewID_seq.NEXTVAL);
    v_review_date := TO_CHAR(SYSDATE,'dd/mm/yyyy');
    if(IN_rating >= 1) THEN
        if(IN_rating <= 4) THEN    
	    INSERT INTO comments (comment_length) VALUES(IN_comments);
            DBMS_OUTPUT.PUT_LINE ('Review ID : ' || v_temp_count);    
            DBMS_OUTPUT.PUT_LINE ('For Order ID : ' || IN_orderId);
            DBMS_OUTPUT.PUT_LINE ('Comments : ' || IN_comments);
            DBMS_OUTPUT.PUT_LINE ('Rating : ' || IN_rating);   
            DBMS_OUTPUT.PUT_LINE ('Review Date : ' || v_review_date); 
            DBMS_OUTPUT.PUT_LINE ('Reorder : ' || 'No'); 
            insert into reviews values(v_temp_count,IN_orderId,IN_comments,IN_rating,v_review_date,'No');
       else 
     	   raise e_invalidrating;
       end if;
    else
        raise e_invalidrating;
    end if;

    exception
	when e_invalidrating then
		raise_application_error(-20021,'RATING MUST WITHIN 1-4');
END;
/


--exec insert_review(118970,'The fries were great toooooooooo.',1);
--WorkSample
--exec insert_review(108579,'The fries were great too.',2);
exec insert_review(108583,'The fries were great tooThe fries were great tooThe fries were great tooThe fries were great tooThe fries were great tooThe fries were great tooThe fries were great tooThe fries were great tooThe fries were great tooThe fries were great tooThe fries were great tooThe fries were great too.',2);
--exec insert_review(108583,'The fries were great too.',2);