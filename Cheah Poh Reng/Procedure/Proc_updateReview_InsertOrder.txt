ALTER SESSION SET NLS_DATE_FORMAT='DD/MM/YYYY HH24:MI';

cl scr

CREATE OR REPLACE PROCEDURE update_review(IN_REVIEWID IN VARCHAR) IS
    currentReorder varchar(10);
    oppositeReorder varchar(10);
    temp_reviewId NUMBER(11);
    temp_reorder VARCHAR(10);
    temp_orderId NUMBER(11);
    reorder_menu NUMBER(11);
    reorder_qty NUMBER(4);
    reorder_price NUMBER(7,2);
    max_orderId number(11);
    vv_orderId number(11);
    vv_custId number(11);
    vv_status VARCHAR(15);

CURSOR history_CURSOR IS
    SELECT menuId, quantityOrdered, priceEach      
    From orderDetails
    WHERE orderId = temp_orderId;
	
CURSOR ORDER_HISTORY_CURSOR IS
    SELECT *
    From orders
    WHERE orderId = temp_orderId;

ORDER_HISTORY_REC ORDER_HISTORY_CURSOR%ROWTYPE;
history_rec history_CURSOR%ROWTYPE;

BEGIN


    SELECT reviewId, reorder, orderId
    INTO temp_reviewId, temp_reorder, temp_orderId
    FROM reviews
    WHERE reviewId = IN_REVIEWID; 


	
    DBMS_OUTPUT.PUT_LINE ('Review ID        : ' || IN_REVIEWID);
    DBMS_OUTPUT.PUT_LINE ('Reorder Order ID : ' || temp_orderId); 
   
    IF temp_reorder = 'Yes' THEN
	currentReorder := 'Yes';
	oppositeReorder := 'Yes';
    ELSE
	currentReorder := 'No';
	oppositeReorder := 'Yes';
        DBMS_OUTPUT.PUT_LINE ('==========================================================='); 
        DBMS_OUTPUT.PUT_LINE ('Changing Reorder from '|| currentReorder ||' to '|| oppositeReorder);
    END IF;  

    DBMS_OUTPUT.PUT_LINE ('===========================================================');
    DBMS_OUTPUT.PUT_LINE ('         ===============REORDERING===============');

    Select Max(orderId)
    INTO max_orderId
    From orders;

    max_orderId := max_orderId + 1;

   OPEN ORDER_HISTORY_CURSOR;
    LOOP
    	FETCH ORDER_HISTORY_CURSOR INTO ORDER_HISTORY_REC; 
    	EXIT WHEN ORDER_HISTORY_CURSOR%NOTFOUND;

        
        insert into orders values(max_orderId,ORDER_HISTORY_REC.customerId,NULL,ORDER_HISTORY_REC.riderId,
		ORDER_HISTORY_REC.subtotal,ORDER_HISTORY_REC.paymentMethod,ORDER_HISTORY_REC.deliveryFees,'31/08/2020', 
	        'Delivered',TO_DATE('22/01/2017 18:57:48', 'DD/MM/YYYY HH24:MI:SS')
	        ,TO_DATE('22/01/2017 18:59:48', 'DD/MM/YYYY HH24:MI:SS'));
    END LOOP;       
    
    OPEN history_CURSOR;
    --OPEN ORDER_HISTORY_CURSOR; 
       LOOP
       FETCH history_CURSOR INTO history_rec;
       EXIT WHEN history_CURSOR%NOTFOUND;

       --EXIT WHEN ORDER_HISTORY_CURSOR%NOTFOUND;
	   DBMS_OUTPUT.PUT_LINE ('                      Menu ID: ' || history_rec.menuId);
           DBMS_OUTPUT.PUT_LINE ('                      Quantity : ' || history_rec.quantityOrdered);   
           DBMS_OUTPUT.PUT_LINE ('                      Price : ' || history_rec.priceEach);   
           DBMS_OUTPUT.PUT_LINE ('          --------------------------------------');
         --OPEN ORDER_HISTORY_CURSOR;
	 --LOOP
         --FETCH ORDER_HISTORY_CURSOR INTO ORDER_HISTORY_REC; 
         --EXIT WHEN ORDER_HISTORY_CURSOR%NOTFOUND;
         --END LOOP;       
     
     insert into orderDetails values(max_orderId,history_rec.menuId,history_rec.quantityOrdered,history_rec.priceEach);       
    
     END LOOP;

    DBMS_OUTPUT.PUT_LINE ('===========================================================');

    UPDATE Reviews SET Reorder = oppositeReorder WHERE reviewID = IN_REVIEWID;

    Select orderId, customerId, status
    INTO vv_orderId,vv_custId,vv_status
    From orders
    WHERE orderID = max_orderId;
           DBMS_OUTPUT.PUT_LINE ('         Thanks For Your Support!' ); 
	   DBMS_OUTPUT.PUT_LINE ('     Customer ID   : ' || vv_custId);  
	   DBMS_OUTPUT.PUT_LINE ('     Order ID      : ' || vv_orderId); 
	   DBMS_OUTPUT.PUT_LINE ('     Status        : ' || vv_status); 
           DBMS_OUTPUT.PUT_LINE ('     Estimate Time : ' || to_char(sysdate + (.000694 * 31), 'DD-MON-YYYY HH24:MI'));   
    DBMS_OUTPUT.PUT_LINE ('===========================================================');
    DBMS_OUTPUT.PUT_LINE ('REORDER SUCCESS');
END;
/
exec update_review(100032)
    
    
