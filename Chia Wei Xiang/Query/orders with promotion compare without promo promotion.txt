-- orders with promotion compare without promo promotion
-- month | order with promocode |  order without promocode |

COLUMN month format a10 heading 'Month'
COLUMN TOTAL_ORDERS format 999999 heading 'Orders with promotion '
COLUMN Promo_sales format 99999999.99 heading 'Sales with promotion'
COLUMN TOTAL_WITHOUT_ORDERS format 999999 heading 'Orders Without promotion'
COLUMN WITHOUT_PROMO format 99999999.99 heading 'Sales Without promotion'
ACCEPT v_year CHAR PROMPT 'Enter the year: '

TTITLE CENTER 'Sales of promotion compare with without promotion' SKIP 1 -
CENTER 'OF YEAR &v_year' SKIP 1 -
CENTER =========================================================================  SKIP 1 -
RIGHT 'Page: ' FORMAT 999 SQL.PNO SKIP 2 -

-- view1
DROP VIEW v_promo_sales1;
CREATE VIEW v_promo_sales1 AS (
        SELECT EXTRACT(YEAR FROM orderDate) year,
                TO_CHAR(TO_DATE(EXTRACT(MONTH FROM orderDate),'mm'), 'MONTH') month,
                COUNT(orderId) AS TOTAL_ORDERS, SUM(subtotal) AS TOTAL_SALES
        FROM orders 
        WHERE promoId IS NOT NULL
        GROUP BY EXTRACT(YEAR FROM orderDate), EXTRACT(MONTH FROM orderDate)
);
-- view2
DROP VIEW v_promo_sales2;
CREATE VIEW v_promo_sales2 AS (
        SELECT EXTRACT(YEAR FROM orderDate) year, 
                TO_CHAR(TO_DATE(EXTRACT(MONTH FROM orderDate),'mm'), 'MONTH') month,
                COUNT(orderId) AS TOTAL_WITHOUT_ORDERS, SUM(subtotal) AS TOTAL_SALES
        FROM orders 
        WHERE promoId IS NULL
        GROUP BY EXTRACT(YEAR FROM orderDate), EXTRACT(MONTH FROM orderDate)
);

SELECT v1.month, v1.TOTAL_ORDERS, v1.TOTAL_SALES AS Promo_sales, 
        v2.TOTAL_WITHOUT_ORDERS, v2.TOTAL_SALES AS WITHOUT_PROMO 
FROM v_promo_sales1 v1, v_promo_sales2 v2
WHERE v1.month = v2.month AND
        v1.year = v2.year AND
        v1.year = &v_year AND
        v2.year = &v_year
ORDER BY to_char(to_date(v1.Month,'MONTH'),'MM');

COLUMN Promo_sales CLEAR
COLUMN WITHOUT_PROMO CLEAR

CLEAR BREAKS;
TTITLE OFF




------------------------------------------

-- DROP VIEW v_promo;
-- CREATE VIEW v_promo AS (
--     SELECT orderDate month, promoid, subtotal
--     FROM orders
-- );


-- SELECT TO_CHAR(TO_DATE(EXTRACT(MONTH FROM v1.month),'mm'), 'MONTH') AS month,
--         SUM(v1.subtotal) AS Promo_sales, SUM(v2.subtotal) AS WITHOUT_PROMO, 
--         (SUM(v2.subtotal) -  SUM(v1.subtotal)) / SUM(v2.subtotal)*100 AS percent
-- FROM v_promo v1, v_promo v2
-- WHERE v2.promoid IS NULL AND
--       v1.promoid IS NOT NULL AND
--       EXTRACT(YEAR FROM v1.month) = '2018' AND
--       EXTRACT(YEAR FROM v2.month) = '2018'
-- GROUP BY EXTRACT(MONTH FROM v1.month)
-- ORDER BY EXTRACT(MONTH FROM v1.month);


-- SELECT TO_CHAR(TO_DATE(EXTRACT(MONTH FROM o.orderDate),'mm'), 'MONTH') AS month,
--         SUM(o.subtotal) AS TOTAL_SALES, 
--         SUM(os.subtotal) AS TOTAL_SALES
-- FROM orders o, orders os
-- WHERE EXTRACT(YEAR FROM o.orderDate) = '2017' AND
--         EXTRACT(YEAR FROM os.orderDate) = '2017' AND 
--         EXTRACT(MONTH FROM o.orderDate) = EXTRACT(MONTH FROM os.orderDate) AND
--         o.promoId IS NOT NULL AND
--         os.promoid IS NULL
-- GROUP BY EXTRACT(MONTH FROM o.orderDate)
-- ORDER BY EXTRACT(MONTH FROM o.orderDate);

-- SELECT TO_CHAR(TO_DATE(EXTRACT(MONTH FROM o.orderDate),'mm'), 'MONTH') AS month, 
--         SUM(o.subtotal) AS TOTAL_SALES, 
--         SUM(os.subtotal) AS TOTAL_SALES
-- FROM orders o, orders os
-- WHERE EXTRACT(YEAR FROM o.orderDate) = '2017' AND
--         EXTRACT(YEAR FROM os.orderDate) = '2017' AND 
--         o.orderDate = os.orderDate AND
--         o.promoId IS NOT NULL AND
--         os.promoid IS NULL 
-- GROUP BY EXTRACT(MONTH FROM o.orderDate)
-- ORDER BY EXTRACT(MONTH FROM o.orderDate);

-- SELECT o.orderDate,  os.orderDate, 
--         SUM(o.subtotal) AS TOTAL_SALES, 
--         SUM(os.subtotal) AS TOTAL_SALES
-- FROM orders o, orders os
-- WHERE EXTRACT(YEAR FROM o.orderDate) = '2017' AND
--         EXTRACT(YEAR FROM os.orderDate) = '2017' AND 
--         o.promoId IS NOT NULL AND
--         os.promoid IS NULL 
-- GROUP BY o.orderDate,  os.orderDate
-- ORDER BY os.orderid;

-- SELECT TO_CHAR(TO_DATE(EXTRACT(MONTH FROM orderDate),'mm'), 'MONTH') AS month,
--         SUM(subtotal) AS TOTAL_SALES
-- FROM orders 
-- WHERE promoId IS NOT NULL
-- GROUP BY EXTRACT(MONTH FROM orderDate)
-- ORDER BY EXTRACT(MONTH FROM orderDate);

-- SELECT TO_CHAR(TO_DATE(EXTRACT(MONTH FROM orderDate),'mm'), 'MONTH') AS month,
--         SUM(subtotal) AS TOTAL_SALES
-- FROM orders
-- WHERE EXTRACT(YEAR FROM orderDate) = '2017'
-- GROUP BY EXTRACT(MONTH FROM orderDate)
-- ORDER BY EXTRACT(MONTH FROM orderDate);


-- DROP VIEW v_promo_sales;
-- CREATE VIEW v_promo_sales AS (
--         SELECT EXTRACT(YEAR FROM orderDate) year, promoid, SUM(subtotal) AS TOTAL_SALES
--         FROM orders
--         GROUP BY EXTRACT(YEAR FROM orderDate),  promoid
-- );



-- SELECT EXTRACT(YEAR FROM orderDate) year, 
--                 TO_CHAR(TO_DATE(EXTRACT(MONTH FROM orderDate),'mm'), 'MONTH') month,
--                 SUM(subtotal) AS TOTAL_SALES
--         FROM orders 
--         WHERE promoId IS NOT NULL
--         GROUP BY EXTRACT(YEAR FROM orderDate), EXTRACT(MONTH FROM orderDate)
--         ORDER BY EXTRACT(YEAR FROM orderDate), EXTRACT(MONTH FROM orderDate);

-- SELECT EXTRACT(YEAR FROM orderDate) year, TO_CHAR(TO_DATE(EXTRACT(MONTH FROM orderDate),'mm'), 'MONTH') month,
--                 SUM(subtotal) AS TOTAL_SALES
--         FROM orders 
--         WHERE promoId IS NULL
--         GROUP BY EXTRACT(YEAR FROM orderDate), EXTRACT(MONTH FROM orderDate)
--         ORDER BY EXTRACT(YEAR FROM orderDate), EXTRACT(MONTH FROM orderDate);

-- SELECT v1.year, SUM(v1.TOTAL_SALES) AS Promo_sales, SUM(v2.TOTAL_SALES) AS WITHOUT_PROMO, 
-- (SUM(v2.TOTAL_SALES) -  SUM(v1.TOTAL_SALES)) / SUM(v2.TOTAL_SALES)*100 AS percent
-- FROM v_promo_sales v1, v_promo_sales v2
-- WHERE v2.promoid IS NULL AND
--       v1.promoid IS NOT NULL AND
--       v1.year = &v_year AND
--       v2.year = &v_year
-- GROUP BY v1.year;    



-- SELECT TO_CHAR(TO_DATE(EXTRACT(MONTH FROM o.orderDate),'mm'), 'MONTH') AS month, 
-- COUNT(v1.promoId) AS promoUsed, SUM(v1.subtotal) AS subtotal,
-- COUNT(p.promoId) AS promoUsed2, SUM(o.subtotal) AS subtotal2
-- FROM orders o, promotion p, views_promotion v1
-- WHERE (o.orderDate = v1.orderDate) AND
-- (EXTRACT(YEAR FROM o.orderDate) = &v_Year) AND
-- (EXTRACT(YEAR FROM v1.orderDate) = &v_Year) AND
-- o.promoId IS NULL
-- GROUP BY EXTRACT(MONTH FROM o.orderDate)
-- ORDER BY EXTRACT(MONTH FROM o.orderDate);

------------------- USE THIS----------------------
-- ACCEPT v_Year    DATE      FORMAT 'YYYY'   PROMPT 'Enter value Year format(YYYY): '

-- COLUMN city format a45 heading 'City'
-- COLUMN orderCount format 999999 heading 'Order Count'
-- COLUMN subtotal format 999999.99 heading 'SubTotal'

-- TTITLE CENTER 'CUSTOEMR REPORT' SKIP 1 -
-- CENTER 'TEST' SKIP 1 -
-- CENTER =========================================================================  SKIP 1 -
-- RIGHT 'Page: ' FORMAT 999 SQL.PNO SKIP 2 -

-- SELECT c.city, COUNT(o.orderId) AS orderCount, SUM(o.subtotal) AS subtotal
-- FROM customers c, orders o
-- WHERE c.customerId = o.customerId AND
--        EXTRACT(YEAR FROM o.orderDate) = &v_Year
-- GROUP BY c.city
-- ORDER BY c.city LIMIT 1;

-- COLUMN city CLEAR
-- COLUMN orderCount CLEAR
-- COLUMN subtotal CLEAR
-- CLEAR BREAKS;
-- TTITLE OFF

------------------- USE THIS----------------------
-- ACCEPT v_Year    DATE      FORMAT 'YYYY'   PROMPT 'Enter value Year format(YYYY): '
-- BREAK ON city ON customers
-- SELECT c.city, o.customerId, COUNT(o.orderId) AS total
-- FROM customers c, orders o
-- WHERE c.customerId = o.customerId AND
--        EXTRACT(YEAR FROM o.orderDate) = &v_Year
-- GROUP BY c.city, o.customerId, c.customerName
-- ORDER BY c.city, total DESC;

