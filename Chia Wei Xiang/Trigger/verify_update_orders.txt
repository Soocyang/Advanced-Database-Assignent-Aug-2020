CREATE OR REPLACE TRIGGER verify_update_order
AFTER
UPDATE ON 
orders
FOR EACH ROW

DECLARE 
      v_credits  orders.subtotal%TYPE;
      e_credit_not_enough     EXCEPTION;

BEGIN
      IF :new.paymentMethod = 'In-App Credits' THEN
            SELECT credits INTO v_credits
            FROM customers
            WHERE customerId = :new.customerId;

            IF :new.subtotal > v_credits THEN
                  RAISE e_credit_not_enough;
            END IF;

            DBMS_OUTPUT.PUT_LINE('Current credits: RM' || v_credits);
      END IF;


      EXCEPTION 
            WHEN NO_DATA_FOUND THEN
                  raise_application_error (-20018,'No records found for the order id.');
            WHEN e_credit_not_enough THEN
                  DBMS_OUTPUT.PUT_LINE (chr(10));
                  DBMS_OUTPUT.PUT_LINE('Credit required: RM' || :new.subtotal);
                  DBMS_OUTPUT.PUT_LINE('Current Credit: RM' || v_credits);
                  DBMS_OUTPUT.PUT_LINE('Credit not enough, remember to topup the credit.' );
END;
/
-- DROP TRIGGER verify_update_order;
    -- SELECT orderID, quantityOrdered, priceEach, (quantityOrdered * priceEach) 
    -- FROM orderDetails
    -- WHERE orderId = '100001';

    -- SELECT orderID, subtotal
    -- FROM orders
    -- WHERE orderId = '100001';

-- CREATE TABLE audits_create_orders (
--       audit_order_id  NUMBER GENERATED BY DEFAULT AS IDENTITY,
--       table_name        VARCHAR2(255),
--       task_type         VARCHAR2(10),
--       by_user           VARCHAR2(30),
--       task_date         DATE,
--       PRIMARY KEY(audit_order_id)
-- );

-- CREATE OR REPLACE TRIGGER verify_create_orders
--     AFTER 
--     INSERT 
--     ON orders
--     FOR EACH ROW    
-- DECLARE
--    task_type VARCHAR2(10);
-- BEGIN
--    task_type := CASE  
--          WHEN INSERTING THEN 'INSERT'
--    END;

--    -- insert a row into the audit table   
--    INSERT INTO audits_create_orders (table_name, task_type, by_user, task_date)
--    VALUES('ORDER', task_type, USER, SYSDATE);

-- END;
-- /

-- COLUMN TABLE_NAME FORMAT a25
-- COLUMN BY_USER FORMAT a7
-- SELECT * FROM audits_create_orders;

-- insert into orders values(128820,1013,1012,1022,59.3,'Credit or Debit Card',10.9,'17/06/2019','Delivered',TO_DATE('17/06/2019 11:33:41', 'DD/MM/YYYY HH24:MI:SS'),TO_DATE('17/06/2019 11:40:41', 'DD/MM/YYYY HH24:MI:SS'));