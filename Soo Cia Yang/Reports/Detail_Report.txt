CREATE OR REPLACE PROCEDURE proc_rider_performance_DetailRpt(IN_riderId IN VARCHAR,
                                                                IN_Year IN VARCHAR)
IS
    v_total_orders_delivered_year number := 0;
    V_avg_delivery_time           number := 0;
    v_rider_status                VARCHAR(100);

    v_pageCount     number := 1;
    V_loop          number := 0;
    v_break         number := 1;
    e_invalidInput exception;
    e_invalidYear  exception;

    CURSOR Report_Cursor IS
        SELECT CONCAT('R', r.riderId) AS riderId, r.riderName,
               TO_CHAR(TO_DATE(EXTRACT(MONTH FROM o.orderDate),'mm'), 'MONTH') AS month, 
               COUNT(o.orderId) AS Total_Orders_Delivered,
               ROUND(AVG((o.receivedTime - o.estimatedTime)*24*60)) as AvgTimeTaken
        FROM orders o, riders r
        WHERE o.riderId = r.riderId AND
              EXTRACT(YEAR FROM o.orderDate) = IN_Year AND
              o.riderId = IN_riderId
        GROUP BY EXTRACT(MONTH FROM o.orderDate), r.riderId, r.riderName
        ORDER BY EXTRACT(MONTH FROM o.orderDate);

    Report_rec Report_Cursor%ROWTYPE;

BEGIN

    -- INPUT VALIDATION
    IF ((IS_NUMBER(IN_Year) = 0) OR (IS_NUMBER(IN_riderId) = 0)) THEN
        raise e_invalidInput;
    ELSE
        IF ((IN_Year > TO_CHAR(sysdate,'yyyy'))) THEN
            raise e_invalidYear;
        END IF;
    END IF;

    -- REPORT HEADER
    DBMS_OUTPUT.PUT_LINE(chr(10));
    DBMS_OUTPUT.PUT_LINE(chr(13)|| LPAD(' ',48,' ') ||'DETAIL REPORT');
    DBMS_OUTPUT.PUT_LINE(chr(13)|| LPAD(' ',22,' ') ||'RIDERS PERFORMANCE REPORT - TOTAL ORDERS DELIVERED OF YEAR ' || IN_Year);
    DBMS_OUTPUT.PUT_LINE(chr(13)|| LPAD(' ',22,' ') || LPAD('=',63,'='));

    -- OPEN QUERY 
    OPEN Report_Cursor;
    LOOP
    FETCH Report_Cursor into Report_rec;            -- FETCH RECORDS
    EXIT WHEN Report_Cursor%NOTFOUND;

        -- PRINT PAGES BY PAGES - PRINT ONLY IF THE RECORD COUNT IS 0 OR REACHES 20 THEN PRINT NEXT PAGE HEADINGS
        IF(v_loop = 0 OR v_loop = 20) THEN
            DBMS_OUTPUT.PUT_LINE(chr(10));
            DBMS_OUTPUT.PUT_LINE(RPAD('Printed Date: ', 14, ' ')||
                                RPAD(TO_CHAR(sysdate,'dd/mm/yyyy'), 10, ' ')||
                                LPAD(' ', 70, ' ')||
                                'Page: '||LPAD(v_pageCount, 2, ' '));

            -- COLUMNS HEADERS
            DBMS_OUTPUT.PUT_LINE(CHR(10));
            DBMS_OUTPUT.PUT_LINE(RPAD('Rider ID', 10, ' ')||
                                    RPAD('Rider Name', 33, ' ')||
                                    RPAD('Month', 9, ' ') ||
                                    RPAD('Total Orders Delivered', 23,' ')||
                                    RPAD('Average Delivery Time (Minutes)', 32,' '));

            -- COLUMNS SEPERATOR 
            DBMS_OUTPUT.PUT_LINE(RPAD('=', 9 ,'=')||' '||
                                RPAD('=', 29 ,'=')||' '||
                                RPAD('=', 11 ,'=')||' '||
                                RPAD('=', 22 ,'=')||' '||
                                RPAD('=', 30 ,'=')||' ');
            v_loop := 0;
            v_pageCount := v_pageCount + 1;
        END IF;

        -- PRINT RECORD
        IF (v_break = 1) THEN
            DBMS_OUTPUT.PUT_LINE( RPAD(Report_rec.riderId, 10, ' ')|| 
                                RPAD(Report_rec.riderName, 30, ' ')|| 
                                RPAD(Report_rec.month, 11, ' ')|| 
                                LPAD(Report_rec.Total_Orders_Delivered, 13,' ')|| 
                                LPAD(TO_CHAR(Report_rec.AvgTimeTaken, 999), 30,' '));
            v_break := 0;
            v_loop := v_loop + 1;
        ELSE
            DBMS_OUTPUT.PUT_LINE(RPAD(chr(13), 15, ' ')|| 
                                RPAD(chr(13) , 41, ' ')|| 
                                RPAD(Report_rec.month, 11, ' ')|| 
                                LPAD(Report_rec.Total_Orders_Delivered, 13,' ')|| 
                                LPAD(TO_CHAR(Report_rec.AvgTimeTaken, 999), 30,' '));
            v_loop := v_loop + 1;
        END IF;

        v_total_orders_delivered_year :=  v_total_orders_delivered_year + Report_rec.Total_Orders_Delivered;
        V_avg_delivery_time := V_avg_delivery_time + Report_rec.AvgTimeTaken;


    END LOOP;

    V_avg_delivery_time := V_avg_delivery_time/12;
    IF V_avg_delivery_time >= 15 THEN
        v_rider_status := 'BAD (More than 15 minutes)';
    ELSE 
        v_rider_status := 'GOOD (Less than 15 minutes)';
    END IF;

    
    DBMS_OUTPUT.PUT_LINE(RPAD('           *', 51 ,'*')|| RPAD(' *',23,'*'));
    DBMS_OUTPUT.PUT_LINE(LPAD('Total Orders Delivered In Year ',45,' ')|| IN_Year || RPAD(' :', 10) ||LPAD(TO_CHAR(v_total_orders_delivered_year, 999), 5, ' ')||' Orders');
    DBMS_OUTPUT.PUT_LINE(LPAD('Average Delivery Time In Year ',45,' ')|| IN_Year || RPAD(' :', 10) ||LPAD(TO_CHAR(V_avg_delivery_time, 999), 5, ' ')||' Minutes');
    DBMS_OUTPUT.PUT_LINE(LPAD('Rider Status :',51,' ')|| LPAD(v_rider_status, 30, ' '));
    DBMS_OUTPUT.PUT_LINE(' ');
    DBMS_OUTPUT.PUT_LINE(chr(13)|| LPAD(' ',48,' ') ||'-END of REPORT-');

EXCEPTION
    
    WHEN e_invalidInput THEN
        DBMS_OUTPUT.PUT_LINE('Invalid  Input: Input rider id and year must be a numberic.');
    WHEN e_invalidYear THEN
        DBMS_OUTPUT.PUT_LINE('Invalid  Input: Input year cannot be future year.');
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error Found. Please contact your Database Administrator');

END;
/

exec proc_rider_performance_DetailRpt(1001,2017);

